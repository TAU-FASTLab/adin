version: "3"
services:      
    adin-api:
        image: docker.ramp.eu/shop4cf/adin-api:5.0.0
        container_name: adin-api
        command: bash -c "python manage.py runserver 0.0.0.0:8000"
        environment:
            - POSTGRES_USER= YOUR_USER
            - POSTGRES_PASSWORD=YOUR_PASSWORD
            - POSTGRES_DB=YOUR_DB
            - DB_HOST=adin-db
            - DB_PORT= 5432
        ports:
            - "8000:8000"
        depends_on:
            - adin-db
    
    adin-db:
        image: postgres:14
        environment:
            - POSTGRES_USER=YOUR_USER
            - POSTGRES_PASSWORD=YOUR_PASSWORD
            - POSTGRES_DB=local_adin_db_2
        volumes:
            - pgdata:/var/lib/postgresql/data
            - ./YOUR_DIRECTORY_TO_DATABASE_BACKUP:/docker-entrypoint-initdb.d/init.sql:ro
        ports:
            - "5432:5432"
    
    adin-fe:
        image: docker.ramp.eu/shop4cf/adin-fe:1.4.1
        container_name: adin-fe
        command: npm start
        depends_on:
          - adin-api
          - adin-nh
        ports:
          - "3000:3000"
        expose:
          - "3000"

    adin-nh:
        image: docker.ramp.eu/shop4cf/adin-nh:1.3.0
        container_name: adin-nh
        command: bash -c "python bridge.py runserver"
        depends_on:
          - orion 
        ports:
          - "54100:54100"
          - "8080:8080"
        expose:
            - "54100"
            - "8080"
  
    mongo:
        image: mongo:3.2
        command: --nojournal
        container_name: mongo
        
    orion:
        image: fiware/orion-ld:latest
        links:
            - mongo
        ports:
            - "1026:1026"
        command: -dbhost mongo -logLevel DEBUG -logForHumans
        container_name: orion
        expose:
            - "1026"
        depends_on:
            - mongo
    
volumes:
    pgdata:
